on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

# Cancel previous runs if a new commit is pushed to the same PR or branch
concurrency:
  group: ${{ github.ref }}  # Group runs by the ref (branch or PR)
  cancel-in-progress: true  # Cancel any ongoing runs in the same group

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build_project:
    runs-on: ubuntu-latest
    name: Build Project
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4

      - name: Don't 'import Mathlib', use precise imports
        run: |
          ! (find SpherePacking -name "*.lean" -type f -print0 | xargs -0 grep -E -n '^import Mathlib$')

      - uses: leanprover/lean-action@v1

      - name: Cache Mathlib Docs
        uses: actions/cache@v4
        with:
          path: |
            docbuild/.lake/build/doc/Aesop
            docbuild/.lake/build/doc/Batteries
            docbuild/.lake/build/doc/find
            docbuild/.lake/build/doc/Init
            docbuild/.lake/build/doc/Lake
            docbuild/.lake/build/doc/Lean
            docbuild/.lake/build/doc/Mathlib
            docbuild/.lake/build/doc/Std
          key: Docs-${{ hashFiles('lake-manifest.json') }}
        if: github.ref == 'refs/heads/main'

      - name: Build Documentation
        run: scripts/build_docs.sh
        if: github.ref == 'refs/heads/main'

      - name: Build blueprint and copy to `home_page/blueprint`
        uses: xu-cheng/texlive-action@v2
        with:
          docker_image: ghcr.io/xu-cheng/texlive-full:20231201
          run: |
            apk update
            apk add --update make py3-pip git pkgconfig graphviz graphviz-dev gcc musl-dev
            git config --global --add safe.directory $GITHUB_WORKSPACE
            git config --global --add safe.directory `pwd`
            python3 -m venv env
            source env/bin/activate
            pip install --upgrade pip requests wheel
            pip install pygraphviz --global-option=build_ext --global-option="-L/usr/lib/graphviz/" --global-option="-R/usr/lib/graphviz/"
            pip install leanblueprint
            leanblueprint pdf
            cp blueprint/print/print.pdf home_page/blueprint.pdf
            leanblueprint web
            cp -r blueprint/web home_page/blueprint

      - name: Check Declarations
        run: |
            ~/.elan/bin/lake exe checkdecls blueprint/lean_decls

      - name: Move documentation to `home_page/docs`
        run: |
          sudo chown -R runner home_page
          cp -r docbuild/.lake/build/doc home_page/docs
        if: github.ref == 'refs/heads/main'

      - name: Bundle dependencies
        uses: ruby/setup-ruby@a4effe49ee8ee5b8b5091268c473a4628afb5651 # v1.245.0
        with:
          working-directory: home_page
          ruby-version: "3.1"  # Specify Ruby version
          bundler-cache: true  # Enable caching for bundler
        if: github.ref == 'refs/heads/main'

      - name: Build website using Jekyll
        working-directory: home_page
        env:
            JEKYLL_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref == 'refs/heads/main'
        run: JEKYLL_ENV=production bundle exec jekyll build

      - name: Upload docs & blueprint artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: home_page/_site/
        if: github.ref == 'refs/heads/main'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        if: github.ref == 'refs/heads/main'
